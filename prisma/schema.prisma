// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id String @default(uuid()) @id
  firstname String
  lastname String
  email String @unique()
  password String
  address String @default("")
  contact String @default("")
  DOB String @default("")
  role Role @default(USER)
  cart Cart[]
  wishlist Wishlist[]
  reviews  Review[]
  orders Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image{
  id        String   @id @default(uuid())
  url       String
  publicId  String
  product   Product? @relation(fields: [productId], references: [id])
  productId String? 
  uploadSessionId String?
  colorVariant ColorVariant?
  createdAt DateTime @default(now())
}

model Product {
  id String @default(uuid()) @id
  name String
  description String
  washingInstruction String
  images    Image[]
  price Int
  stock Int
  size String[]
  cartItems CartItem[]
  orderItems OrderItem[]
  wishlistItems WishlistItem[]
  colorVariants  ColorVariant[]
  brandId         String
  brand           Brand   @relation(fields: [brandId], references: [id])
  categoryId        String
  category          Category   @relation(fields: [categoryId], references: [id])
  reviews  Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ColorVariant {
  id         String    @id @default(uuid())
  name       String
  hex        String 
  product    Product?   @relation(fields: [productId], references: [id])
  productId  String?
  colorSessionId String?
  imageId   String   @unique
  image     Image    @relation(fields: [imageId], references: [id])
}

model Category {
  id String @default(uuid()) @id
  name String @unique
  products  Product[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id String @default(uuid()) @id
  name String @unique
  products  Product[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id String @id @default(uuid())
  rating Int
  comment String
  isVerified Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product        Product   @relation(fields: [productId], references: [id])
  productId      String
  user           User      @relation(fields: [userId], references: [id])
  userId         String
  parentReview   Review?   @relation("ReviewReplies", fields: [parentReviewId], references: [id])
  parentReviewId String?
  replies        Review[]  @relation("ReviewReplies")
  
}

model Cart {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId    String
  items     CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id String @id @default(uuid())
  cart Cart @relation(fields: [cartId], references: [id])
  cartId    String

  product Product @relation(fields: [productId], references: [id])
  productId String

  size      String 
  quantity  Int
}

model Wishlist {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId    String
  items     WishlistItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WishlistItem {
  id String @id @default(uuid())
  wishlist Wishlist @relation(fields: [wishlistId], references: [id])
  wishlistId    String

  product Product @relation(fields: [productId], references: [id])
  productId String
}

model OrderItem {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Int 
  size     String[]
  createdAt DateTime @default(now())
}

model Order {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId    String
  items     OrderItem[]
  totalPrice Int
  status String @default("In Progress")
  trackingNumber String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

